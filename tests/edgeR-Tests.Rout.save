
R version 3.0.0 (2013-04-03) -- "Masked Marvel"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(edgeR)
Loading required package: limma
> 
> set.seed(0); u <- runif(100)
> 
> # generate raw counts from NB, create list object
> y <- matrix(rnbinom(80,size=5,mu=10),nrow=20)
> y <- rbind(0,c(0,0,2,2),y)
> rownames(y) <- paste("Tag",1:nrow(y),sep=".")
> d <- DGEList(counts=y,group=rep(1:2,each=2),lib.size=1001:1004)
> 
> # estimate common dispersion and find differences in expression
> d <- estimateCommonDisp(d)
> d$common.dispersion
[1] 0.210292
> de <- exactTest(d)
> summary(de$table)
     logFC             logCPM          PValue       
 Min.   :-1.7266   Min.   :10.96   Min.   :0.01976  
 1st Qu.:-0.4855   1st Qu.:13.21   1st Qu.:0.33120  
 Median : 0.2253   Median :13.37   Median :0.56514  
 Mean   : 0.1877   Mean   :13.26   Mean   :0.54504  
 3rd Qu.: 0.5258   3rd Qu.:13.70   3rd Qu.:0.81052  
 Max.   : 4.0861   Max.   :14.31   Max.   :1.00000  
> topTags(de)
Comparison of groups:  2-1 
            logFC   logCPM     PValue       FDR
Tag.17  2.0450964 13.73750 0.01975954 0.4347099
Tag.21 -1.7265870 13.38299 0.06131012 0.6744114
Tag.6  -1.6329986 12.81458 0.12446044 0.8982100
Tag.2   4.0861092 11.54134 0.16331090 0.8982100
Tag.16  0.9324996 13.57093 0.29050785 0.9655885
Tag.20  0.8543138 13.76371 0.31736609 0.9655885
Tag.12  0.7081170 14.31393 0.37271028 0.9655885
Tag.19 -0.7976602 13.31402 0.40166354 0.9655885
Tag.3  -0.7300410 13.54148 0.42139935 0.9655885
Tag.8  -0.7917906 12.86342 0.47117217 0.9655885
> 
> d2 <- estimateTagwiseDisp(d,trend="none",prior.df=20)
> summary(d2$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1757  0.1896  0.1989  0.2063  0.2185  0.2677 
> de <- exactTest(d2,dispersion="common")
> topTags(de)
Comparison of groups:  2-1 
            logFC   logCPM     PValue       FDR
Tag.17  2.0450964 13.73750 0.01975954 0.4347099
Tag.21 -1.7265870 13.38299 0.06131012 0.6744114
Tag.6  -1.6329986 12.81458 0.12446044 0.8982100
Tag.2   4.0861092 11.54134 0.16331090 0.8982100
Tag.16  0.9324996 13.57093 0.29050785 0.9655885
Tag.20  0.8543138 13.76371 0.31736609 0.9655885
Tag.12  0.7081170 14.31393 0.37271028 0.9655885
Tag.19 -0.7976602 13.31402 0.40166354 0.9655885
Tag.3  -0.7300410 13.54148 0.42139935 0.9655885
Tag.8  -0.7917906 12.86342 0.47117217 0.9655885
> 
> de <- exactTest(d2)
> topTags(de)
Comparison of groups:  2-1 
            logFC   logCPM     PValue       FDR
Tag.17  2.0450987 13.73750 0.01327001 0.2919403
Tag.21 -1.7265897 13.38299 0.05683886 0.6252275
Tag.6  -1.6329910 12.81458 0.11460208 0.8404152
Tag.2   4.0861092 11.54134 0.16126207 0.8869414
Tag.16  0.9324975 13.57093 0.28103256 0.9669238
Tag.20  0.8543178 13.76371 0.30234789 0.9669238
Tag.12  0.7081149 14.31393 0.37917895 0.9669238
Tag.19 -0.7976633 13.31402 0.40762735 0.9669238
Tag.3  -0.7300478 13.54148 0.40856822 0.9669238
Tag.8  -0.7918243 12.86342 0.49005179 0.9669238
> 
> d2 <- estimateTagwiseDisp(d,trend="movingave",span=0.4,prior.df=20)
> summary(d2$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1005  0.1629  0.2064  0.2077  0.2585  0.3164 
> de <- exactTest(d2)
> topTags(de)
Comparison of groups:  2-1 
            logFC   logCPM     PValue       FDR
Tag.17  2.0450951 13.73750 0.02427872 0.5341319
Tag.21 -1.7265927 13.38299 0.05234833 0.5758316
Tag.6  -1.6330014 12.81458 0.12846308 0.8954397
Tag.2   4.0861092 11.54134 0.16280722 0.8954397
Tag.16  0.9324887 13.57093 0.24308201 0.9711975
Tag.20  0.8543044 13.76371 0.35534649 0.9711975
Tag.19 -0.7976535 13.31402 0.38873717 0.9711975
Tag.3  -0.7300525 13.54148 0.40001438 0.9711975
Tag.12  0.7080985 14.31393 0.43530228 0.9711975
Tag.8  -0.7918376 12.86342 0.49782701 0.9711975
> 
> summary(exactTest(d2,rejection="smallp")$table$PValue)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.02428 0.36370 0.55660 0.54320 0.78890 1.00000 
> summary(exactTest(d2,rejection="deviance")$table$PValue)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.02428 0.36370 0.55660 0.54320 0.78890 1.00000 
> 
> d2 <- estimateTagwiseDisp(d,trend="loess",span=0.8,prior.df=20)
> summary(d2$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1165  0.1449  0.1833  0.1849  0.2116  0.2826 
> de <- exactTest(d2)
> topTags(de)
Comparison of groups:  2-1 
            logFC   logCPM     PValue       FDR
Tag.17  2.0450979 13.73750 0.01547929 0.3405443
Tag.21 -1.7266049 13.38299 0.03544057 0.3898463
Tag.6  -1.6329841 12.81458 0.10633495 0.7797896
Tag.2   4.0861092 11.54134 0.16057929 0.8831861
Tag.16  0.9324935 13.57093 0.26349447 0.9658370
Tag.20  0.8543140 13.76371 0.31673704 0.9658370
Tag.19 -0.7976354 13.31402 0.35562850 0.9658370
Tag.3  -0.7300593 13.54148 0.38831288 0.9658370
Tag.12  0.7081041 14.31393 0.41512829 0.9658370
Tag.8  -0.7918152 12.86342 0.48483728 0.9658370
> 
> d2 <- estimateTagwiseDisp(d,trend="tricube",span=0.8,prior.df=20)
> summary(d2$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1165  0.1449  0.1833  0.1849  0.2116  0.2826 
> de <- exactTest(d2)
> topTags(de)
Comparison of groups:  2-1 
            logFC   logCPM     PValue       FDR
Tag.17  2.0450979 13.73750 0.01547929 0.3405443
Tag.21 -1.7266049 13.38299 0.03544057 0.3898463
Tag.6  -1.6329841 12.81458 0.10633495 0.7797896
Tag.2   4.0861092 11.54134 0.16057929 0.8831861
Tag.16  0.9324935 13.57093 0.26349447 0.9658370
Tag.20  0.8543140 13.76371 0.31673704 0.9658370
Tag.19 -0.7976354 13.31402 0.35562850 0.9658370
Tag.3  -0.7300593 13.54148 0.38831288 0.9658370
Tag.12  0.7081041 14.31393 0.41512829 0.9658370
Tag.8  -0.7918152 12.86342 0.48483728 0.9658370
> 
> # mglmOneWay
> design <- model.matrix(~group,data=d$samples)
> mglmOneWay(d[1:10,],design,dispersion=0.2)
$coefficients
        (Intercept)        group2
 [1,] -1.000000e+08  0.000000e+00
 [2,] -1.000000e+08  1.000000e+08
 [3,]  2.525729e+00 -5.108256e-01
 [4,]  2.525729e+00  1.484200e-01
 [5,]  2.140066e+00 -1.941560e-01
 [6,]  2.079442e+00 -1.163151e+00
 [7,]  2.014903e+00  2.363888e-01
 [8,]  1.945910e+00 -5.596158e-01
 [9,]  1.504077e+00  2.006707e-01
[10,]  2.302585e+00  2.623643e-01

$fitted.values
      [,1] [,2] [,3] [,4]
 [1,]  0.0  0.0  0.0  0.0
 [2,]  0.0  0.0  2.0  2.0
 [3,] 12.5 12.5  7.5  7.5
 [4,] 12.5 12.5 14.5 14.5
 [5,]  8.5  8.5  7.0  7.0
 [6,]  8.0  8.0  2.5  2.5
 [7,]  7.5  7.5  9.5  9.5
 [8,]  7.0  7.0  4.0  4.0
 [9,]  4.5  4.5  5.5  5.5
[10,] 10.0 10.0 13.0 13.0

> mglmOneWay(d[1:10,],design,dispersion=0)
$coefficients
        (Intercept)        group2
 [1,] -1.000000e+08  0.000000e+00
 [2,] -1.000000e+08  1.000000e+08
 [3,]  2.525729e+00 -5.108256e-01
 [4,]  2.525729e+00  1.484200e-01
 [5,]  2.140066e+00 -1.941560e-01
 [6,]  2.079442e+00 -1.163151e+00
 [7,]  2.014903e+00  2.363888e-01
 [8,]  1.945910e+00 -5.596158e-01
 [9,]  1.504077e+00  2.006707e-01
[10,]  2.302585e+00  2.623643e-01

$fitted.values
      [,1] [,2] [,3] [,4]
 [1,]  0.0  0.0  0.0  0.0
 [2,]  0.0  0.0  2.0  2.0
 [3,] 12.5 12.5  7.5  7.5
 [4,] 12.5 12.5 14.5 14.5
 [5,]  8.5  8.5  7.0  7.0
 [6,]  8.0  8.0  2.5  2.5
 [7,]  7.5  7.5  9.5  9.5
 [8,]  7.0  7.0  4.0  4.0
 [9,]  4.5  4.5  5.5  5.5
[10,] 10.0 10.0 13.0 13.0

> 
> fit <- glmFit(d,design,dispersion=d$common.dispersion,prior.count=0.5/4)
> lrt <- glmLRT(fit,coef=2)
> topTags(lrt)
Coefficient:  group2 
            logFC   logCPM        LR     PValue       FDR
Tag.17  2.0450964 13.73750 6.0485417 0.01391779 0.3058697
Tag.2   4.0861092 11.54134 4.8400348 0.02780633 0.3058697
Tag.21 -1.7265870 13.38299 4.0777825 0.04345065 0.3186381
Tag.6  -1.6329986 12.81458 3.0078205 0.08286364 0.4557500
Tag.16  0.9324996 13.57093 1.3477682 0.24566867 0.8276702
Tag.20  0.8543138 13.76371 1.1890032 0.27553071 0.8276702
Tag.19 -0.7976602 13.31402 0.9279152 0.33540526 0.8276702
Tag.12  0.7081170 14.31393 0.9095513 0.34023349 0.8276702
Tag.3  -0.7300410 13.54148 0.8300307 0.36226364 0.8276702
Tag.8  -0.7917906 12.86342 0.7830377 0.37621371 0.8276702
> 
> fit <- glmFit(d,design,dispersion=d$common.dispersion,prior.count=0.5)
> summary(fit$coef)
  (Intercept)         group2        
 Min.   :-7.604   Min.   :-1.13681  
 1st Qu.:-4.895   1st Qu.:-0.32341  
 Median :-4.713   Median : 0.15083  
 Mean   :-4.940   Mean   : 0.07817  
 3rd Qu.:-4.524   3rd Qu.: 0.35163  
 Max.   :-4.107   Max.   : 1.60864  
> 
> fit <- glmFit(d,design,prior.count=0.5/4)
> lrt <- glmLRT(fit,coef=2)
> topTags(lrt)
Coefficient:  group2 
            logFC   logCPM        LR     PValue       FDR
Tag.17  2.0450964 13.73750 6.0485417 0.01391779 0.3058697
Tag.2   4.0861092 11.54134 4.8400348 0.02780633 0.3058697
Tag.21 -1.7265870 13.38299 4.0777825 0.04345065 0.3186381
Tag.6  -1.6329986 12.81458 3.0078205 0.08286364 0.4557500
Tag.16  0.9324996 13.57093 1.3477682 0.24566867 0.8276702
Tag.20  0.8543138 13.76371 1.1890032 0.27553071 0.8276702
Tag.19 -0.7976602 13.31402 0.9279152 0.33540526 0.8276702
Tag.12  0.7081170 14.31393 0.9095513 0.34023349 0.8276702
Tag.3  -0.7300410 13.54148 0.8300307 0.36226364 0.8276702
Tag.8  -0.7917906 12.86342 0.7830377 0.37621371 0.8276702
> 
> dglm <- estimateGLMCommonDisp(d,design)
> dglm$common.dispersion
[1] 0.2033282
> dglm <- estimateGLMTagwiseDisp(dglm,design,prior.df=20)
> summary(dglm$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1756  0.1879  0.1998  0.2031  0.2135  0.2578 
> fit <- glmFit(dglm,design,prior.count=0.5/4)
> lrt <- glmLRT(fit,coef=2)
> topTags(lrt)
Coefficient:  group2 
            logFC   logCPM        LR      PValue       FDR
Tag.17  2.0450988 13.73750 6.8001118 0.009115216 0.2005348
Tag.2   4.0861092 11.54134 4.8594096 0.027495744 0.2872068
Tag.21 -1.7265904 13.38299 4.2537154 0.039164558 0.2872068
Tag.6  -1.6329904 12.81458 3.1763761 0.074710253 0.4109064
Tag.16  0.9324970 13.57093 1.4126709 0.234613511 0.8499599
Tag.20  0.8543183 13.76371 1.2721097 0.259371274 0.8499599
Tag.19 -0.7976614 13.31402 0.9190392 0.337727380 0.8499599
Tag.12  0.7081163 14.31393 0.9014515 0.342392806 0.8499599
Tag.3  -0.7300488 13.54148 0.8817937 0.347710872 0.8499599
Tag.8  -0.7918166 12.86342 0.7356185 0.391068048 0.8603497
> dglm <- estimateGLMTrendedDisp(dglm,design)
> summary(dglm$trended.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1522  0.1676  0.1740  0.1887  0.1999  0.3471 
> dglm <- estimateGLMTrendedDisp(dglm,design,method="power")
> summary(dglm$trended.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1522  0.1676  0.1740  0.1887  0.1999  0.3471 
> dglm <- estimateGLMTrendedDisp(dglm,design,method="spline")
Loading required package: splines
> summary(dglm$trended.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0206  0.1010  0.1687  0.1849  0.2445  0.4910 
> dglm <- estimateGLMTrendedDisp(dglm,design,method="bin.spline")
> summary(dglm$trended.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1997  0.1997  0.1997  0.1997  0.1997  0.1997 
> dglm <- estimateGLMTagwiseDisp(dglm,design,prior.df=20)
> summary(dglm$tagwise.dispersion)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.1385  0.1792  0.1964  0.1935  0.2026  0.2709 
> 
> # Continuous trend
> nlibs <- 3
> ntags <- 1000
> dispersion.true <- 0.1
> # Make first transcript respond to covariate x
> x <- 0:2
> design <- model.matrix(~x)
> beta.true <- cbind(Beta1=2,Beta2=c(2,rep(0,ntags-1)))
> mu.true <- 2^(beta.true %*% t(design))
> # Generate count data
> y <- rnbinom(ntags*nlibs,mu=mu.true,size=1/dispersion.true)
> y <- matrix(y,ntags,nlibs)
> colnames(y) <- c("x0","x1","x2")
> rownames(y) <- paste("Gene",1:ntags,sep="")
> d <- DGEList(y)
> d <- calcNormFactors(d)
> fit <- glmFit(d, design, dispersion=dispersion.true, prior.count=0.5/3)
> results <- glmLRT(fit, coef=2)
> topTags(results)
Coefficient:  x 
            logFC   logCPM        LR       PValue          FDR
Gene1    2.907024 13.56183 38.738513 4.845535e-10 4.845535e-07
Gene61   2.855317 10.27136 10.738307 1.049403e-03 5.247014e-01
Gene62  -2.123902 10.53174  8.818704 2.981584e-03 8.334758e-01
Gene134 -1.949073 10.53355  8.125889 4.363759e-03 8.334758e-01
Gene740 -1.610046 10.94907  8.013408 4.643227e-03 8.334758e-01
Gene354  2.022698 10.45066  7.826308 5.149116e-03 8.334758e-01
Gene5    1.856816 10.45249  7.214238 7.232750e-03 8.334758e-01
Gene746 -1.798331 10.53094  6.846262 8.882690e-03 8.334758e-01
Gene110  1.623148 10.68607  6.737984 9.438120e-03 8.334758e-01
Gene383  1.637140 10.75412  6.687530 9.708962e-03 8.334758e-01
> d <- estimateGLMCommonDisp(d, design, verbose=TRUE)
Disp = 0.10253 , BCV = 0.3202 
> glmFit(d,design,dispersion=dispersion.true,method="simple", prior.count=0.5/3)
Loading required package: MASS
An object of class "DGEGLM"
$coefficients
      (Intercept)          x
Gene1   -7.391745  2.0149958
Gene2   -7.318483 -0.7611895
Gene3   -6.831702 -0.1399478
Gene4   -7.480255  0.5172002
Gene5   -8.747793  1.2870467
995 more rows ...

$df.residual
[1] 1 1 1 1 1
995 more elements ...

$deviance
[1] 6.38037582 1.46644949 1.38532340 0.01593969 1.03894514
995 more elements ...

$design
  (Intercept) x
1           1 0
2           1 1
3           1 2
attr(,"assign")
[1] 0 1

$offset
         [,1]     [,2]     [,3]
[1,] 8.295172 8.338525 8.284484
[2,] 8.295172 8.338525 8.284484
[3,] 8.295172 8.338525 8.284484
[4,] 8.295172 8.338525 8.284484
[5,] 8.295172 8.338525 8.284484
995 more rows ...

$dispersion
[1] 0.1

$weights
     [,1] [,2] [,3]
[1,]    1    1    1
[2,]    1    1    1
[3,]    1    1    1
[4,]    1    1    1
[5,]    1    1    1
995 more rows ...

$fitted.values
             x0        x1          x2
Gene1 2.3569790 18.954451 138.2830865
Gene2 2.5138459  1.089294   0.4282075
Gene3 4.1580678  3.750528   3.0689914
Gene4 2.1012458  3.769592   6.1349943
Gene5 0.5080376  2.136398   8.1502479
995 more rows ...

$converged
[1] TRUE TRUE TRUE TRUE TRUE
995 more elements ...

$error
[1] FALSE FALSE FALSE FALSE FALSE
995 more elements ...

$counts
      x0 x1  x2
Gene1  0 30 110
Gene2  2  2   0
Gene3  3  6   2
Gene4  2  4   6
Gene5  1  1   9
995 more rows ...

$method
[1] "simple"

$samples
   group lib.size norm.factors
x0     1     4001    1.0008730
x1     1     4176    1.0014172
x2     1     3971    0.9977138

$AveLogCPM
[1] 13.561832  9.682757 10.447014 10.532113 10.452489
995 more elements ...

> glmFit(d,design,dispersion=dispersion.true,method="levenberg", prior.count=0.5/3)
An object of class "DGEGLM"
$coefficients
      (Intercept)          x
Gene1   -7.391745  2.0149958
Gene2   -7.318483 -0.7611895
Gene3   -6.831702 -0.1399478
Gene4   -7.480255  0.5172002
Gene5   -8.747793  1.2870467
995 more rows ...

$fitted.values
             x0        x1          x2
Gene1 2.3570471 18.954454 138.2791326
Gene2 2.5138172  1.089292   0.4282107
Gene3 4.1580452  3.750528   3.0690081
Gene4 2.1012460  3.769592   6.1349937
Gene5 0.5080377  2.136398   8.1502486
995 more rows ...

$deviance
[1] 6.38037543 1.46644912 1.38532340 0.01593969 1.03894514
995 more elements ...

$iter
[1] 8 4 4 4 6
995 more elements ...

$failed
[1] FALSE FALSE FALSE FALSE FALSE
995 more elements ...

$counts
      x0 x1  x2
Gene1  0 30 110
Gene2  2  2   0
Gene3  3  6   2
Gene4  2  4   6
Gene5  1  1   9
995 more rows ...

$df.residual
[1] 1 1 1 1 1
995 more elements ...

$design
  (Intercept) x
1           1 0
2           1 1
3           1 2
attr(,"assign")
[1] 0 1

$offset
         [,1]     [,2]     [,3]
[1,] 8.295172 8.338525 8.284484
[2,] 8.295172 8.338525 8.284484
[3,] 8.295172 8.338525 8.284484
[4,] 8.295172 8.338525 8.284484
[5,] 8.295172 8.338525 8.284484
995 more rows ...

$dispersion
[1] 0.1

$method
[1] "levenberg"

$samples
   group lib.size norm.factors
x0     1     4001    1.0008730
x1     1     4176    1.0014172
x2     1     3971    0.9977138

$AveLogCPM
[1] 13.561832  9.682757 10.447014 10.532113 10.452489
995 more elements ...

> 
> # Exact tests
> y <- matrix(rnbinom(20,mu=10,size=3/2),5,4)
> group <- factor(c(1,1,2,2))
> ys <- splitIntoGroupsPseudo(y,group,pair=c(1,2))
> exactTestDoubleTail(ys$y1,ys$y2,dispersion=2/3)
[1] 0.1334396 0.6343568 0.7280015 0.7124912 0.3919258
> 
> y <- matrix(rnbinom(5*7,mu=10,size=3/2),5,7)
> group <- factor(c(1,1,2,2,3,3,3))
> ys <- splitIntoGroupsPseudo(y,group,pair=c(1,3))
> exactTestDoubleTail(ys$y1,ys$y2,dispersion=2/3)
[1] 1.0000000 0.4486382 1.0000000 0.9390317 0.4591241
> exactTestBetaApprox(ys$y1,ys$y2,dispersion=2/3)
[1] 1.0000000 0.4492969 1.0000000 0.9421695 0.4589194
> 
> y[1,3:4] <- 0
> design <- model.matrix(~group)
> fit <- glmFit(y,design,dispersion=2/3,prior.count=0.5/7)
> summary(fit$coef)
  (Intercept)         group2            group3        
 Min.   :-1.817   Min.   :-5.0171   Min.   :-0.64646  
 1st Qu.:-1.812   1st Qu.:-1.1565   1st Qu.:-0.13919  
 Median :-1.712   Median : 0.1994   Median :-0.10441  
 Mean   :-1.625   Mean   :-0.9523   Mean   :-0.04217  
 3rd Qu.:-1.429   3rd Qu.: 0.3755   3rd Qu.:-0.04305  
 Max.   :-1.356   Max.   : 0.8374   Max.   : 0.72227  
> 
> lrt <- glmLRT(fit,contrast=cbind(c(0,1,0),c(0,0,1)))
> topTags(lrt)
Coefficient:  LR test of 2 contrasts 
     logFC.1    logFC.2   logCPM         LR      PValue        FDR
1 -7.2381060 -0.0621100 17.20027 10.7712179 0.004582049 0.02291025
5 -1.6684268 -0.9326507 17.34879  1.7309951 0.420842114 0.90967967
2  1.2080938  1.0420198 18.24809  1.0496688 0.591653346 0.90967967
4  0.5416704 -0.1506381 17.59977  0.3958596 0.820427427 0.90967967
3  0.2876249 -0.2008143 18.02991  0.1893255 0.909679671 0.90967967
> design <- model.matrix(~0+group)
> fit <- glmFit(y,design,dispersion=2/3,prior.count=0.5/7)
> lrt <- glmLRT(fit,contrast=cbind(c(-1,1,0),c(0,-1,1),c(-1,0,1)))
> topTags(lrt)
Coefficient:  LR test of 2 contrasts 
     logFC.1    logFC.2   logCPM         LR      PValue        FDR
1 -7.2381060  7.1759960 17.20027 10.7712179 0.004582049 0.02291025
5 -1.6684268  0.7357761 17.34879  1.7309951 0.420842114 0.90967967
2  1.2080938 -0.1660740 18.24809  1.0496688 0.591653346 0.90967967
4  0.5416704 -0.6923084 17.59977  0.3958596 0.820427427 0.90967967
3  0.2876249 -0.4884392 18.02991  0.1893255 0.909679671 0.90967967
> 
> # spliceVariants
> z = matrix(c(2,0,4,6,4,3,7,1,1,0,1,1,0,3,1,2,0,1,2,1,0,3,1,0), 8, 3)
> gz = c(1,2,2,2,2,2,2,2)
> spliceVariants(DGEList(counts = z, group = c(1,2,2)), gz)
An object of class "DGEExact"
$table
  logFC   logCPM       LR     PValue
1    NA 19.19460  0.00000 1.00000000
2    NA 19.34082 11.47712 0.07470318

$comparison
NULL

$genes
  GeneID
1      1
2      2

$dispersion
           1            2 
6.434416e-03 1.570902e-06 

> 
> # simple Good-Turing algorithm runs.
> test1<-1:9
> freq1<-c(2018046, 449721, 188933, 105668, 68379, 48190, 35709, 37710, 22280)
> goodTuring(rep(test1, freq1))
$P0
[1] 0.3814719

$proportion
[1] 8.035111e-08 2.272143e-07 4.060582e-07 5.773690e-07 7.516705e-07
[6] 9.276808e-07 1.104759e-06 1.282549e-06 1.460837e-06

$count
[1] 1 2 3 4 5 6 7 8 9

$n
[1] 2018046  449721  188933  105668   68379   48190   35709   37710   22280

$n0
[1] 0

> test2<-c(312, 14491, 16401, 65124, 129797, 323321, 366051, 368599, 405261, 604962)
> goodTuring(test2)
$P0
[1] 0

$proportion
 [1] 0.0001362656 0.0063162959 0.0071487846 0.0283850925 0.0565733349
 [6] 0.1409223124 0.1595465235 0.1606570896 0.1766365144 0.2636777866

$count
 [1]    312  14491  16401  65124 129797 323321 366051 368599 405261 604962

$n
 [1] 1 1 1 1 1 1 1 1 1 1

$n0
[1] 0

> 
> 
> 
> proc.time()
   user  system elapsed 
   4.30    0.04    4.35 
